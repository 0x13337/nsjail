{"name":"NsJail","tagline":"A light-weight process isolation tool, making use of Linux namespaces and seccomp-bpf","body":"### WHAT IS IT?\r\nNsJail is a process isolation tool for Linux. It makes use of the the namespacing, resource control, and seccomp-bpf syscall filter subsystems of the Linux kernel.\r\n\r\nIt can be used, among others to:\r\n  * Secure networking service (e.g. web, time, DNS), by isolating them from the rest of the OS\r\n  * Hosting computer security challenges (so-called CTFs)\r\n  * Containing invasive syscall-level OS fuzzers\r\n\r\nThis is NOT an official Google product.\r\n\r\n### WHAT KIND OF ISOLATION DOES IT PROVIDE?\r\n1. Linux namespaces: UTS (hostname), MOUNT (chroot), PID (separate PID tree), IPC, NET (separate networking context), USER\r\n2. FS constraints: chroot(), pivot_root(), RO-remounting\r\n3. Resource limits (wall-time/CPU time limits, VM/mem address space limits, etc.)\r\n4. Programmable seccomp-bpf syscall filters\r\n\r\n### WHICH USE-CASES ARE COVERED?\r\n#### Isolation of network servers (inetd-style)\r\n\r\n+ Server:\r\n```\r\n $ ./nsjail -Ml --port 9000 --chroot /chroot/ --user 99999 --group 99999 -- /bin/sh -i\r\n```\r\n\r\n+ Client:\r\n```\r\n $ nc 127.0.0.1 9000\r\n / $ ifconfig\r\n / $ ifconfig -a\r\n lo    Link encap:Local Loopback\r\n       LOOPBACK  MTU:65536  Metric:1\r\n       RX packets:0 errors:0 dropped:0 overruns:0 frame:0\r\n       TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0\r\n       RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 3 99999    {busybox} ps wuax\r\n / $\r\n\r\n```\r\n\r\n#### Isolation of local processes\r\n```\r\n $ ./nsjail -Mo --chroot /chroot/ --user 99999 --group 99999 -- /bin/sh -i\r\n / $ ifconfig -a\r\n lo    Link encap:Local Loopback\r\n       LOOPBACK  MTU:65536  Metric:1\r\n       RX packets:0 errors:0 dropped:0 overruns:0 frame:0\r\n       TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0\r\n       RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\r\n / $ id\r\n uid=99999 gid=99999\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 4 99999    {busybox} ps wuax\r\n / $exit\r\n $\r\n```\r\n\r\n#### Isolation of local processes (and re-running them)\r\n```\r\n $ ./nsjail -Mr --chroot /chroot/ --user 99999 --group 99999 -- /bin/sh -i\r\n BusyBox v1.21.1 (Ubuntu 1:1.21.0-1ubuntu1) built-in shell (ash)\r\n Enter 'help' for a list of built-in commands.\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 2 99999    {busybox} ps wuax\r\n / $ exit\r\n BusyBox v1.21.1 (Ubuntu 1:1.21.0-1ubuntu1) built-in shell (ash)\r\n Enter 'help' for a list of built-in commands.\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 2 99999    {busybox} ps wuax\r\n / $\r\n```\r\n\r\n### MORE INFO?\r\nType:\r\n```\r\n./nsjail --help'\r\n```\r\nThe commandline options are reasonably well-documented\r\n```\r\nUsage: ./nsjail [options] -- path_to_command [args]\r\nOptions:\r\n --help|-h\r\n\tHelp plz..\r\n --mode|-M [val]\r\n\tExecution mode (default: l [MODE_LISTEN_TCP]):\r\n\tl: Listen to connections on a TCP port (specified with --port) [MODE_LISTEN_TCP]\r\n\to: Immediately launch a single process on a console [MODE_STANDALONE_ONCE]\r\n\tr: Immediately launch a single process on a console, keep doing it forever [MODE_STANDALONE_RERUN]\r\n --chroot|-c [val]\r\n\tDirectory containing / of the jail (default: '/chroot')\r\n --user|-u [val]\r\n\tUsername/uid of processess inside the jail (default: 'nobody')\r\n --group|-g [val]\r\n\tGroupname/gid of processess inside the jail (default: 'nogroup')\r\n --hostname|-H [val]\r\n\tUTS name (hostname) of the jail (default: 'NSJAIL')\r\n --port|-p [val]\r\n\tTCP port to bind to (only in [MODE_LISTEN_TCP]) (default: 31337)\r\n --max_conns_per_ip|-i [val]\r\n\tMaximum number of connections per one IP (default: 0 (unlimited))\r\n --log|-l [val]\r\n\tLog file (default: stderr)\r\n --time_limit|-t [val]\r\n\tMaximum time that a jail can exist, in seconds (default: 600)\r\n --daemon|-d\r\n --verbose|-v\r\n\tVerbose output (default: false)\r\n --keep_env|-e\r\n\tShould all environment variables be passed to the child? (default: false)\r\n --keep_caps\r\n\tDon't drop capabilities (DANGEROUS) (default: false)\r\n --rlimit_as [val]\r\n\tRLIMIT_AS in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 512)\r\n --rlimit_core [val]\r\n\tRLIMIT_CORE in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 0)\r\n --rlimit_cpu [val]\r\n\tRLIMIT_CPU, 'max' for RLIM_INFINITY, 'def' for the current value (default: 600)\r\n --rlimit_fsize [val]\r\n\tRLIMIT_FSIZE in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 1)\r\n --rlimit_nofile [val]\r\n\tRLIMIT_NOFILE, 'max' for RLIM_INFINITY, 'def' for the current value (default: 32)\r\n --rlimit_nproc [val]\r\n\tRLIMIT_NPROC, 'max' for RLIM_INFINITY, 'def' for the current value (default: 'def')\r\n --rlimit_stack [val]\r\n\tRLIMIT_STACK in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 'def')\r\n --persona_addr_compat_layout\r\n\tpersonality(ADDR_COMPAT_LAYOUT) (default: false)\r\n --persona_mmap_page_zero\r\n\tpersonality(MMAP_PAGE_ZERO) (default: false)\r\n --persona_read_implies_exec\r\n\tpersonality(READ_IMPLIES_EXEC) (default: false)\r\n --persona_addr_limit_3gb\r\n\tpersonality(ADDR_LIMIT_3GB) (default: false)\r\n --persona_addr_no_randomize\r\n\tpersonality(ADDR_NO_RANDOMIZE) (default: false)\r\n --disable_clone_newnet|-N\r\n\tEnable networking inside the jail (default: false)\r\n --disable_clone_newuser\r\n\tDon't use CLONE_NEWUSER (default: false)\r\n --disable_clone_newns\r\n\tDon't use CLONE_NEWNS (default: false)\r\n --disable_clone_newpid\r\n\tDon't use CLONE_NEWPID (default: false)\r\n --disable_clone_newipc\r\n\tDon't use CLONE_NEWIPC (default: false)\r\n --disable_clone_newuts\r\n\tDon't use CLONE_NEWUTS (default: false)\r\n --disable_sandbox\r\n\tDon't enable the seccomp-bpf sandboxing (default: false)\r\n --rw\r\n\tMount / as RW (default: RO)\r\n --silent\r\n\tRedirect child's fd:0/1/2 to /dev/null (default: false)\r\n --bindmount_ro [val]\r\n\tList of mountpoints to be mounted --bind (ro) inside the container. Can be specified multiple times. Supports 'source' syntax, or 'source:dest'. (default: none)\r\n --bindmount|-B [val]\r\n\tList of mountpoints to be mounted --bind (rw) inside the container. Can be specified multiple times. Supports 'source' syntax, or 'source:dest'. (default: none)\r\n --tmpfsmount|-T [val]\r\n\tList of mountpoints to be mounted as RW/tmpfs inside the container. Can be specified multiple times. Supports 'dest' syntax. (default: none)\r\n --iface|-I [val]\r\n\tInterface which will be cloned (MACVTAP) and put inside the subprocess' namespace\r\n --tmpfs_size [val]\r\n\tNumber of bytes to allocate for tmpfsmounts in bytes (default: 4194304)\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}