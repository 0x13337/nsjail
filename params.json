{
  "name": "NsJail",
  "tagline": "A light-weight process isolation tool, making use of Linux namespaces and seccomp-bpf",
  "body": "### WHAT IS IT?\r\nNsJail is a process isolation tool for Linux. It makes use of the the namespacing, resource control, and seccomp-bpf syscall filter subsystems of the Linux kernel.\r\n\r\nIt can help, among others, with:\r\n  * Securing networking services (e.g. web, time, DNS), by isolating them from the rest of the OS\r\n  * Hosting computer security challenges (so-called CTFs)\r\n  * Containing invasive syscall-level OS fuzzers\r\n\r\nThis is NOT an official Google product.\r\n\r\n### WHAT TYPE OF ISOLATION DOES THIS TOOL PROVIDE?\r\n1. Linux namespaces: UTS (hostname), MOUNT (chroot), PID (separate PID tree), IPC, NET (separate networking context), USER\r\n2. FS constraints: chroot(), pivot_root(), RO-remounting\r\n3. Resource limits (wall-time/CPU time limits, VM/mem address space limits, etc.)\r\n4. Programmable seccomp-bpf syscall filters\r\n5. Cloned and separated Ethernet interfaces\r\n6. Cgroups for memory utilization control\r\n\r\n### WHICH USE-CASES ARE SUPPORTED?\r\n#### Isolation of network services (inetd-style)\r\n\r\n+ Server:\r\n```\r\n $ ./nsjail -Ml --port 9000 --chroot /chroot/ --user 99999 --group 99999 -- /bin/sh -i\r\n```\r\n\r\n+ Client:\r\n```\r\n $ nc 127.0.0.1 9000\r\n / $ ifconfig\r\n / $ ifconfig -a\r\n lo    Link encap:Local Loopback\r\n       LOOPBACK  MTU:65536  Metric:1\r\n       RX packets:0 errors:0 dropped:0 overruns:0 frame:0\r\n       TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0\r\n       RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 3 99999    {busybox} ps wuax\r\n / $\r\n\r\n```\r\n\r\n#### Isolation, with access to a private, cloned interface (requires euid==0)\r\n```\r\n$ sudo ./nsjail --user 9999 --group 9999 --iface eth0 --chroot /chroot/ -Mo --iface_vs_ip 192.168.0.44 --iface_vs_nm 255.255.255.0 --iface_vs_gw 192.168.0.1 -- /bin/sh -i\r\n/ $ id\r\nuid=9999 gid=9999\r\n/ $ ip addr sh\r\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue \r\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\r\n    inet 127.0.0.1/8 scope host lo\r\n       valid_lft forever preferred_lft forever\r\n    inet6 ::1/128 scope host \r\n       valid_lft forever preferred_lft forever\r\n2: vs: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue \r\n    link/ether ca:a2:69:21:33:66 brd ff:ff:ff:ff:ff:ff\r\n    inet 192.168.0.44/24 brd 192.168.0.255 scope global vs\r\n       valid_lft forever preferred_lft forever\r\n    inet6 fe80::c8a2:69ff:fe21:cd66/64 scope link \r\n       valid_lft forever preferred_lft forever\r\n/ $ nc 217.146.165.209 80\r\nGET / HTTP/1.0\r\n\r\nHTTP/1.0 302 Found\r\nCache-Control: private\r\nContent-Type: text/html; charset=UTF-8\r\nLocation: http://www.google.ch/?gfe_rd=cr&ei=cEzWVrG2CeTI8ge88ofwDA\r\nContent-Length: 258\r\nDate: Wed, 02 Mar 2016 02:14:08 GMT\r\n\r\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<TITLE>302 Moved</TITLE></HEAD><BODY>\r\n<H1>302 Moved</H1>\r\nThe document has moved\r\n<A HREF=\"http://www.google.ch/?gfe_rd=cr&amp;ei=cEzWVrG2CeTI8ge88ofwDA\">here</A>.\r\n</BODY></HTML>\r\n/ $ \r\n```\r\n\r\n#### Isolation of local processes\r\n```\r\n $ ./nsjail -Mo --chroot /chroot/ --user 99999 --group 99999 -- /bin/sh -i\r\n / $ ifconfig -a\r\n lo    Link encap:Local Loopback\r\n       LOOPBACK  MTU:65536  Metric:1\r\n       RX packets:0 errors:0 dropped:0 overruns:0 frame:0\r\n       TX packets:0 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0\r\n       RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)\r\n / $ id\r\n uid=99999 gid=99999\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 4 99999    {busybox} ps wuax\r\n / $exit\r\n $\r\n```\r\n\r\n#### Isolation of local processes (and re-running them)\r\n```\r\n $ ./nsjail -Mr --chroot /chroot/ --user 99999 --group 99999 -- /bin/sh -i\r\n BusyBox v1.21.1 (Ubuntu 1:1.21.0-1ubuntu1) built-in shell (ash)\r\n Enter 'help' for a list of built-in commands.\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 2 99999    {busybox} ps wuax\r\n / $ exit\r\n BusyBox v1.21.1 (Ubuntu 1:1.21.0-1ubuntu1) built-in shell (ash)\r\n Enter 'help' for a list of built-in commands.\r\n / $ ps wuax\r\n PID   USER     COMMAND\r\n 1 99999    /bin/sh -i\r\n 2 99999    {busybox} ps wuax\r\n / $\r\n```\r\n\r\n#### Bash in a minimal file-system with uid==0 and access to /dev/urandom\r\n```\r\n$ ./nsjail -Mo --user 0 --group 99999 -R /bin/ -R /lib -R /lib64/ -R /usr/ -R /sbin/ -T /dev -R /dev/urandom --keep_caps -- /bin/bash -i\r\nbash-4.3# ls -l /\r\ntotal 40\r\ndrwxr-xr-x   2 65534 65534 12288 Jun 17 23:27 bin\r\ndrwxrwxrwt   2     0 99999    60 Jun 19 12:31 dev\r\ndrwxr-xr-x  25 65534 65534  4096 Jun  9 18:29 lib\r\ndrwxr-xr-x   2 65534 65534  4096 Apr 15 22:27 lib64\r\ndr-xr-xr-x 260 65534 65534     0 Jun 19 12:31 proc\r\ndrwxr-xr-x   2 65534 65534 16384 Jun 11 21:03 sbin\r\ndrwxr-xr-x  21 65534 65534  4096 Apr 24 16:13 usr\r\nbash-4.3# ls -l /dev/\r\ntotal 0\r\ncrw-rw-rw- 1 65534 65534 1, 9 Jun  9 18:33 urandom\r\nbash-4.3# id\r\nuid=0 gid=99999 groups=99999,65534\r\n```\r\n\r\n### MORE INFO?\r\nTo see the options, simply type:\r\n```\r\n./nsjail --help\r\n```\r\n\r\nThe commandline options should be reasonably well-documented\r\n\r\n```\r\nUsage: ./nsjail [options] -- path_to_command [args]\r\nOptions:\r\n --help|-h \r\n\tHelp plz..\r\n --mode|-M VALUE\r\n\tExecution mode (default: o [MODE_STANDALONE_ONCE]):\r\n\tl: Wait for connections on a TCP port (specified with --port) [MODE_LISTEN_TCP]\r\n\to: Immediately launch a single process on a console using clone/execve [MODE_STANDALONE_ONCE]\r\n\te: Immediately launch a single process on a console using execve [MODE_STANDALONE_EXECVE]\r\n\tr: Immediately launch a single process on a console, keep doing it forever [MODE_STANDALONE_RERUN]\r\n --chroot|-c VALUE\r\n\tDirectory containing / of the jail (default: none)\r\n --rw \r\n\tMount / as RW (default: RO)\r\n --user|-u VALUE\r\n\tUsername/uid of processess inside the jail (default: your current uid). You can also use inside_ns_uid:outside_ns_uid convention here\r\n --group|-g VALUE\r\n\tGroupname/gid of processess inside the jail (default: your current gid). You can also use inside_ns_gid:global_ns_gid convention here\r\n --hostname|-H VALUE\r\n\tUTS name (hostname) of the jail (default: 'NSJAIL')\r\n --cwd|-D VALUE\r\n\tDirectory in the namespace the process will run (default: '/')\r\n --port|-p VALUE\r\n\tTCP port to bind to (enables MODE_LISTEN_TCP) (default: 0)\r\n --bindhost VALUE\r\n\tIP address port to bind to (only in [MODE_LISTEN_TCP]), '::ffff:127.0.0.1' for locahost (default: '::')\r\n --max_conns_per_ip|-i VALUE\r\n\tMaximum number of connections per one IP (default: 0 (unlimited))\r\n --log|-l VALUE\r\n\tLog file (default: /proc/self/fd/2)\r\n --time_limit|-t VALUE\r\n\tMaximum time that a jail can exist, in seconds (default: 600)\r\n --daemon|-d \r\n\tDaemonize after start\r\n --verbose|-v \r\n\tVerbose output\r\n --keep_env|-e \r\n\tShould all environment variables be passed to the child?\r\n --env|-E VALUE\r\n\tEnvironment variable (can be used multiple times)\r\n --keep_caps \r\n\tDon't drop capabilities (DANGEROUS)\r\n --silent \r\n\tRedirect child's fd:0/1/2 to /dev/null\r\n --skip_setsid \r\n\tDon't call setsid(), allows for terminal signal handling in the sandboxed process\r\n --pass_fd VALUE\r\n\tDon't close this FD before executing child (can be specified multiple times), by default: 0/1/2 are kept open\r\n --pivot_root_only \r\n\tOnly perform pivot_root, no chroot. This will enable nested namespaces\r\n --disable_no_new_privs \r\n\tDon't set the prctl(NO_NEW_PRIVS, 1) (DANGEROUS)\r\n --rlimit_as VALUE\r\n\tRLIMIT_AS in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 512)\r\n --rlimit_core VALUE\r\n\tRLIMIT_CORE in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 0)\r\n --rlimit_cpu VALUE\r\n\tRLIMIT_CPU, 'max' for RLIM_INFINITY, 'def' for the current value (default: 600)\r\n --rlimit_fsize VALUE\r\n\tRLIMIT_FSIZE in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 1)\r\n --rlimit_nofile VALUE\r\n\tRLIMIT_NOFILE, 'max' for RLIM_INFINITY, 'def' for the current value (default: 32)\r\n --rlimit_nproc VALUE\r\n\tRLIMIT_NPROC, 'max' for RLIM_INFINITY, 'def' for the current value (default: 'def')\r\n --rlimit_stack VALUE\r\n\tRLIMIT_STACK in MB, 'max' for RLIM_INFINITY, 'def' for the current value (default: 'def')\r\n --persona_addr_compat_layout \r\n\tpersonality(ADDR_COMPAT_LAYOUT)\r\n --persona_mmap_page_zero \r\n\tpersonality(MMAP_PAGE_ZERO)\r\n --persona_read_implies_exec \r\n\tpersonality(READ_IMPLIES_EXEC)\r\n --persona_addr_limit_3gb \r\n\tpersonality(ADDR_LIMIT_3GB)\r\n --persona_addr_no_randomize \r\n\tpersonality(ADDR_NO_RANDOMIZE)\r\n --disable_clone_newnet|-N \r\n\tDon't use CLONE_NEWNET. Enable networking inside the jail\r\n --disable_clone_newuser \r\n\tDon't use CLONE_NEWUSER. Requires euid==0\r\n --disable_clone_newns \r\n\tDon't use CLONE_NEWNS\r\n --disable_clone_newpid \r\n\tDon't use CLONE_NEWPID\r\n --disable_clone_newipc \r\n\tDon't use CLONE_NEWIPC\r\n --disable_clone_newuts \r\n\tDon't use CLONE_NEWUTS\r\n --enable_clone_newcgroup \r\n\tUse CLONE_NEWCGROUP\r\n --uid_mapping|-U VALUE\r\n\tAdd a custom uid mapping of the form inside_uid:outside_uid:count. Setting this requires newuidmap to be present\r\n --gid_mapping|-G VALUE\r\n\tAdd a custom gid mapping of the form inside_gid:outside_gid:count. Setting this requires newuidmap to be present\r\n --bindmount_ro|-R VALUE\r\n\tList of mountpoints to be mounted --bind (ro) inside the container. Can be specified multiple times. Supports 'source' syntax, or 'source:dest'\r\n --bindmount|-B VALUE\r\n\tList of mountpoints to be mounted --bind (rw) inside the container. Can be specified multiple times. Supports 'source' syntax, or 'source:dest'\r\n --tmpfsmount|-T VALUE\r\n\tList of mountpoints to be mounted as RW/tmpfs inside the container. Can be specified multiple times. Supports 'dest' syntax\r\n --tmpfs_size VALUE\r\n\tNumber of bytes to allocate for tmpfsmounts (default: 4194304)\r\n --disable_proc \r\n\tDisable mounting /proc in the jail\r\n --seccomp_policy|-P VALUE\r\n\tPath to file containing seccomp-bpf policy (see kafel/)\r\n --seccomp_string VALUE\r\n\tString with kafel seccomp-bpf policy (see kafel/)\r\n --cgroup_mem_max VALUE\r\n\tMaximum number of bytes to use in the group (default: '0' - disabled)\r\n --cgroup_mem_mount VALUE\r\n\tLocation of memory cgroup FS (default: '/sys/fs/cgroup/memory')\r\n --cgroup_mem_parent VALUE\r\n\tWhich pre-existing memory cgroup to use as a parent (default: 'NSJAIL')\r\n --iface_no_lo \r\n\tDon't bring up the 'lo' interface\r\n --iface|-I VALUE\r\n\tInterface which will be cloned (MACVLAN) and put inside the subprocess' namespace as 'vs'\r\n --iface_vs_ip VALUE\r\n\tIP of the 'vs' interface\r\n --iface_vs_nm VALUE\r\n\tNetmask of the 'vs' interface\r\n --iface_vs_gw VALUE\r\n\tDefault GW for the 'vs' interface\r\n\r\n Examples: \r\n Wait on a port 31337 for connections, and run /bin/sh\r\n  nsjail -Ml --port 31337 --chroot / -- /bin/sh -i\r\n Re-run echo command as a sub-process\r\n  nsjail -Mr --chroot / -- /bin/echo \"ABC\"\r\n Run echo command once only, as a sub-process\r\n  nsjail -Mo --chroot / -- /bin/echo \"ABC\"\r\n Execute echo command directly, without a supervising process\r\n  nsjail -Me --chroot / --disable_proc -- /bin/echo \"ABC\"\r\n```\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}